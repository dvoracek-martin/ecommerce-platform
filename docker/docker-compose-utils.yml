version: '3.8'

services:
  postgres:
    image: postgres:latest
    container_name: keycloak-service-postgres-db
    environment:
      POSTGRES_DB: keycloak
      POSTGRES_USER: keycloak
      POSTGRES_PASSWORD: keycloak
    ports:
      - "5432:5432"
    volumes:
      - keycloak_postgres_data:/var/lib/postgresql/data

  keycloak:
    image: quay.io/keycloak/keycloak:24.0.2
    container_name: keycloak-service
    ports:
      - "9090:8080"
    environment:
      KEYCLOAK_ADMIN: admin
      KEYCLOAK_ADMIN_PASSWORD: admin
      KC_DB: postgres
      KC_DB_URL_HOST: postgres
      KC_DB_URL_PORT: 5432
      KC_DB_URL_DATABASE: keycloak
      KC_DB_USERNAME: keycloak
      KC_DB_PASSWORD: keycloak
    command: >
      start-dev
      --import-realm
      --spi-import-file=/opt/keycloak/data/import/keycloak-ecommerce-platform-realm.json
    volumes:
      - keycloak_data:/opt/keycloak/data
      - ./config/keycloak/keycloak-ecommerce-platform-realm.json:/opt/keycloak/data/import/keycloak-ecommerce-platform-realm.json:ro
    depends_on:
      - postgres
    restart: always

  kafka:
    image: bitnami/kafka:3.8.1
    container_name: kafka-service
    environment:
      - KAFKA_ENABLE_KRAFT=yes
      - KAFKA_CFG_NODE_ID=1
      - KAFKA_CFG_PROCESS_ROLES=broker,controller
      - KAFKA_CFG_CONTROLLER_QUORUM_VOTERS=1@kafka:9093
      - KAFKA_CFG_LISTENERS=INTERNAL://0.0.0.0:9092,EXTERNAL://0.0.0.0:29092,CONTROLLER://0.0.0.0:9093
      - KAFKA_CFG_CONTROLLER_LISTENER_NAMES=CONTROLLER
      - KAFKA_CFG_ADVERTISED_LISTENERS=INTERNAL://kafka:9092,EXTERNAL://localhost:29092
      - KAFKA_CFG_LISTENER_SECURITY_PROTOCOL_MAP=INTERNAL:PLAINTEXT,EXTERNAL:PLAINTEXT,CONTROLLER:PLAINTEXT
      - KAFKA_CFG_INTER_BROKER_LISTENER_NAME=INTERNAL
      - KAFKA_CFG_AUTO_CREATE_TOPICS_ENABLE=true
      - KAFKA_CFG_NUM_PARTITIONS=1
      - ALLOW_PLAINTEXT_LISTENER=yes
    ports:
      - "9092:9092"
      - "29092:29092"
    networks:
      - kafka-network
    volumes:
      - kafka_data:/bitnami/kafka

  redis:
    image: redis:latest
    container_name: redis-service
    ports:
      - "6379:6379"

  mailhog:
    image: mailhog/mailhog
    container_name: mailhog-service
    ports:
      - "1025:1025"
      - "7999:8025"

  kafdrop:
    image: obsidiandynamics/kafdrop:latest
    container_name: kafdrop
    depends_on:
      - kafka
    environment:
      KAFKA_BROKERCONNECT: "kafka:9092"
      JVM_OPTS: "-Xms32M -Xmx64M"
    ports:
      - "9000:9000"
    networks:
      - kafka-network

  minio:
    image: minio/minio:latest
    container_name: minio-service
    ports:
      - "1000:9000"
      - "1001:9001" # MinIO Console
    volumes:
      - ./data:/data
    environment:
      MINIO_ROOT_USER: your_access_key
      MINIO_ROOT_PASSWORD: your_secret_key
    command: ["server", "/data", "--console-address", ":9001"]

  prometheus:
    image: prom/prometheus
    container_name: prometheus
    ports:
      - "9004:9090"
    volumes:
      - ./config/prometheus/prometheus.yml:/etc/prometheus/prometheus.yml

  grafana:
    image: grafana/grafana
    ports:
      - "9005:3000"
    environment:
      GF_SECURITY_ADMIN_PASSWORD: admin
    depends_on:
      - prometheus

volumes:
  keycloak_postgres_data:
  keycloak_data:
  kafka_data:

networks:
  kafka-network:
    driver: bridge
